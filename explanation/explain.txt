This Program is an SQL like database for students in C
so you can store, delete, change or count students in the list.

-------------------------------------------------------------------------------

COMMANDS: insert , delete , select , update , exit , cls , count , average , max , min , help

-------------------------------------------------------------------------------

    EXPLANATION:
        (insert) -> This command inserts a student to the database.
                    It insert the id the name and grade of a student.

        (delete) -> This command deletes a student from the database
                    OR deletes every student if you use it correctly. (Explained in SYNTAX)

        (select) -> 1 This command takes one student and prints the information
                    of that student. 2 you can print every student the database has. 
                    3 you can print information of every student with grade > < = to what you passed (Explained in SYNTAX)
        
        (update) -> This command changes a students grade

        (exit) -> This command exits the program

        (cls) -> This command clears the terminal screen
                 for cleaner use.

        (count) -> This command print the students count,
                   it finds how many students are in the list

        (average) -> This command shows you the average grade
                     of all the students in the list

        (max) -> This cmmand finds the student with the best grade grade;

        (min) -> This commands finds the student with the worst grade;

        (help) -> This command shows you a panel of all the commands
                  and explain them shortly

    -------------------------------------------------------------------------

    SYNTAX:
        (insert) -> "insert <id> <name> <grade>" To insert the student

        (delete) -> "delete" OR "delete <id>" The 1st use deletes all the students
                                              but the 2nd use deletes the student who has the <id> you passed

        (select) -> "select", "select <name>", "select <op> <grade>" 
                                                The 1st use prints all the students info
                                                the 2nd use prints only students <name> info
                                                the 3rd use prints all the students with <op> <grade>

        (update) -> "update <id> <new_grade>" It find the student with the <id> you passed and changes 
                                              his grade with the <new_grade>

        (exit) -> "exit" Nothing special just exiting the program like that

        (cls) -> "cls" Also Nothing special just clears the terminal

        (count) -> "count" This is how you can see how many students have you added in the list

        (average) -> "average" And after you write this you can see the average grade

        (max) -> "max" Just write that and you see whats student is better

        (min) -> "min" And like this you can see the worst student

        (help) -> "help" If you type this command you will see 
                         all the commands without reading this documentation

-------------------------------------------------------------------------------

NOTES: 
    CTRL + C signal is handed so the programs frees 
             the memory even if you dint get to the exit.

    The program uses Linked list for adding students
    so you can add as many as you want.

    The colors are not the same in every system or terminal configuration.

    The data is stored on a .txt file and parsed to the program every time
    the program runs so you can still use them. Syntax of storing data -> ID|Name|Grade

    the max characters for a name is 49.

    Students are getting sorted by the id Number,
    using the bubble sort algorithm so the program 
    gets more clear when you want to print the students from the list.

    You cant insert two students with the same name or ID
    Because the commands delete , select uses this datas as parameters
    and if two students have the same name or ID the program prints 
    or deletes the 1st of those two it finds, So we made insertion checking.

-------------------------------------------------------------------------------

FILE STRUCTURE:
    C_DATABASE/
        |-- .github/
        |      |-- screenshot.png
        |
        |-- src/
        |      |-- colors/
        |      |      |-- colors.h
        |      |
        |      |-- commands/
        |      |      |-- database.c
        |      |      |-- database.h
        |      |      
        |      |-- utils/
        |      |      |-- utils.c
        |      |      |-- utils.h
        |      |
        |      |-- executer/
        |      |      |-- executer.h
        |      |      |-- executer.c
        |      |
        |      |-- MAIN.c
        |      
        |
        |
        |-- explanation/
        |      |-- explain.txt
        |
        |-- README.md
        |-- Makefile
        |-- LICENSE

-------------------------------------------------------------------------------
